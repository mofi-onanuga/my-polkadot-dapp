export declare const wellknownChains: {
    readonly polkadot: readonly [() => Promise<{
        default: typeof import("polkadot-api/chains/polkadot");
        chainSpec: string;
    }>, {
        readonly polkadot_asset_hub: () => Promise<{
            default: typeof import("polkadot-api/chains/polkadot_asset_hub");
            chainSpec: string;
        }>;
        readonly polkadot_bridge_hub: () => Promise<{
            default: typeof import("polkadot-api/chains/polkadot_bridge_hub");
            chainSpec: string;
        }>;
        readonly polkadot_collectives: () => Promise<{
            default: typeof import("polkadot-api/chains/polkadot_collectives");
            chainSpec: string;
        }>;
        readonly polkadot_coretime: () => Promise<{
            default: typeof import("polkadot-api/chains/polkadot_coretime");
            chainSpec: string;
        }>;
        readonly polkadot_people: () => Promise<{
            default: typeof import("polkadot-api/chains/polkadot_people");
            chainSpec: string;
        }>;
    }];
    readonly kusama: readonly [() => Promise<{
        default: typeof import("polkadot-api/chains/ksmcc3");
        chainSpec: string;
    }>, {
        readonly kusama_asset_hub: () => Promise<{
            default: typeof import("polkadot-api/chains/ksmcc3_asset_hub");
            chainSpec: string;
        }>;
        readonly kusama_bridge_hub: () => Promise<{
            default: typeof import("polkadot-api/chains/ksmcc3_bridge_hub");
            chainSpec: string;
        }>;
        readonly kusama_encointer: () => Promise<{
            default: typeof import("polkadot-api/chains/ksmcc3_encointer");
            chainSpec: string;
        }>;
        readonly kusama_people: () => Promise<{
            default: typeof import("polkadot-api/chains/ksmcc3_people");
            chainSpec: string;
        }>;
    }];
    readonly paseo: readonly [() => Promise<{
        default: typeof import("polkadot-api/chains/paseo");
        chainSpec: string;
    }>, {
        readonly paseo_asset_hub: () => Promise<{
            default: typeof import("polkadot-api/chains/paseo_asset_hub");
            chainSpec: string;
        }>;
        readonly paseo_people: () => Promise<{
            default: typeof import("polkadot-api/chains/paseo_people");
            chainSpec: string;
        }>;
    }];
    readonly westend: readonly [() => Promise<{
        default: typeof import("polkadot-api/chains/westend2");
        chainSpec: string;
    }>, {
        readonly westend_asset_hub: () => Promise<{
            default: typeof import("polkadot-api/chains/westend2_asset_hub");
            chainSpec: string;
        }>;
        readonly westend_bridge_hub: () => Promise<{
            default: typeof import("polkadot-api/chains/westend2_bridge_hub");
            chainSpec: string;
        }>;
        readonly westend_collectives: () => Promise<{
            default: typeof import("polkadot-api/chains/westend2_collectives");
            chainSpec: string;
        }>;
        readonly westend_people: () => Promise<{
            default: typeof import("polkadot-api/chains/westend2_people");
            chainSpec: string;
        }>;
    }];
};
export type WellknownRelayChainId = keyof typeof wellknownChains;
type KeysOfUnion<T> = T extends T ? keyof T : never;
export type WellknownParachainId = KeysOfUnion<(typeof wellknownChains)[WellknownRelayChainId][1]>;
export {};
//# sourceMappingURL=wellknown-chains.d.ts.map