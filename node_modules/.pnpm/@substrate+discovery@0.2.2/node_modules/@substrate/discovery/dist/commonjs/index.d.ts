export type ProviderDetail = {
    kind: string;
    info: ProviderInfo;
    provider: unknown;
};
export type OnProvider = {
    onProvider(detail: ProviderDetail): void;
};
export type ProviderInfo = {
    uuid: string;
    name: string;
    icon: string;
    rdns: string;
};
export declare const getProviders: () => ProviderDetail[];
export interface AnnounceProviderEvent extends CustomEvent<ProviderDetail> {
    type: "substrateDiscovery:announceProvider";
}
export interface RequestProviderEvent extends CustomEvent<OnProvider> {
    type: "substrateDiscovery:requestProvider";
}
declare global {
    interface WindowEventMap {
        "substrateDiscovery:announceProvider": AnnounceProviderEvent;
        "substrateDiscovery:requestProvider": RequestProviderEvent;
    }
}
//# sourceMappingURL=index.d.ts.map