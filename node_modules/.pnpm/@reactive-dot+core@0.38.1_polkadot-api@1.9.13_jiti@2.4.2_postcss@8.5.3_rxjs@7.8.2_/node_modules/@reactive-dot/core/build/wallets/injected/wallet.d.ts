import type { PolkadotSignerAccount } from "../account.js";
import { Wallet, type WalletOptions } from "../wallet.js";
import { Observable } from "rxjs";
export type InjectedWalletOptions = WalletOptions & {
    originName?: string;
};
export declare class InjectedWallet extends Wallet<InjectedWalletOptions, "connected"> {
    #private;
    readonly name: string;
    get id(): string;
    constructor(name: string, options?: InjectedWalletOptions);
    initialize(): Promise<void>;
    readonly connected$: Observable<boolean>;
    connect(): Promise<void>;
    disconnect(): void;
    readonly accounts$: Observable<PolkadotSignerAccount[]>;
    getAccounts(): {
        polkadotSigner: import("@polkadot-api/polkadot-signer").PolkadotSigner;
        address: string;
        genesisHash?: string | null;
        name?: string;
        type?: import("@polkadot-api/pjs-signer").KeypairType;
        id: string;
    }[];
}
//# sourceMappingURL=wallet.d.ts.map