import type { CommonDescriptor } from "../chains.js";
import type { InferInstructionResponse, QueryInstruction } from "../query-builder.js";
import type { ChainDefinition, TypedApi } from "polkadot-api";
export declare function preflight<TInstruction extends QueryInstruction>(instruction: TInstruction): TInstruction["instruction"] extends "get-constant" ? "promise" : TInstruction["instruction"] extends "call-api" ? "promise" : TInstruction["instruction"] extends "read-storage-entries" ? "promise" : TInstruction["instruction"] extends "read-storage" ? "observable" : "promise" | "observable";
export declare function query<TInstruction extends QueryInstruction, TDescriptor extends ChainDefinition = CommonDescriptor>(api: TypedApi<TDescriptor>, instruction: TInstruction, options?: {
    signal?: AbortSignal;
}): InferInstructionResponse<TInstruction>;
//# sourceMappingURL=query.d.ts.map