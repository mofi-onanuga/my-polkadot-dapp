import { atomFamilyWithErrorCatcher } from "../utils/jotai/atom-family-with-error-catcher.js";
import { useAtomValue } from "./use-atom-value.js";
import { internal_useChainId } from "./use-chain-id.js";
import { clientAtom } from "./use-client.js";
import { useConfig } from "./use-config.js";
import { derive } from "jotai-derive";
/**
 * Hook for fetching the [JSON-RPC spec](https://paritytech.github.io/json-rpc-interface-spec/api/chainSpec.html).
 *
 * @param options - Additional options
 * @returns The [JSON-RPC spec](https://paritytech.github.io/json-rpc-interface-spec/api/chainSpec.html)
 */
export function useChainSpecData(options) {
    return useAtomValue(chainSpecDataAtom(useConfig(), internal_useChainId(options)));
}
/**
 * @internal
 */
export const chainSpecDataAtom = atomFamilyWithErrorCatcher((withErrorCatcher, config, chainId) => withErrorCatcher(derive([clientAtom(config, chainId)], (client) => client.getChainSpecData())));
//# sourceMappingURL=use-chain-spec-data.js.map