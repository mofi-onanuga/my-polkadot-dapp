import type { ChainHookOptions } from "./types.js";
import { type ChainId, type Config } from "@reactive-dot/core";
import type { ChainDescriptorOf } from "@reactive-dot/core/internal.js";
import type { TypedApi } from "polkadot-api";
/**
 * Hook for getting Polkadot-API typed API.
 *
 * @param options - Additional options
 * @returns Polkadot-API typed API
 */
export declare function useTypedApi<TChainId extends ChainId | undefined>(options?: ChainHookOptions<TChainId>): TypedApi<ChainDescriptorOf<TChainId>>;
/**
 * @internal
 */
export declare const typedApiAtom: import("../utils/jotai/atom-family.js").AtomFamily<[config: Config, chainId: string | number], import("jotai").Atom<TypedApi<import("polkadot-api").ChainDefinition> | Promise<TypedApi<import("polkadot-api").ChainDefinition>>>>;
//# sourceMappingURL=use-typed-api.d.ts.map