import type { Config } from "@reactive-dot/core";
/**
 * Hook for getting all available wallets.
 *
 * @returns Available wallets
 */
export declare function useWallets(): import("@reactive-dot/core/wallets.js").Wallet<import("@reactive-dot/core/wallets.js").WalletOptions, string>[];
/**
 * Hook for getting all connected wallets.
 *
 * @returns Connected wallets
 */
export declare function useConnectedWallets(): import("@reactive-dot/core/wallets.js").Wallet<import("@reactive-dot/core/wallets.js").WalletOptions, string>[];
/**
 * @internal
 */
export declare const walletsAtom: import("../utils/jotai/atom-family.js").AtomFamily<[config: Config], import("jotai").Atom<Promise<import("@reactive-dot/core/wallets.js").Wallet<import("@reactive-dot/core/wallets.js").WalletOptions, string>[]>>>;
/**
 * @internal
 */
export declare const connectedWalletsAtom: import("../utils/jotai/atom-family.js").AtomFamily<[config: Config], {
    observableAtom: import("jotai").Atom<import("@reactive-dot/core/wallets.js").Wallet<import("@reactive-dot/core/wallets.js").WalletOptions, string>[] | Promise<import("@reactive-dot/core/wallets.js").Wallet<import("@reactive-dot/core/wallets.js").WalletOptions, string>[]>>;
    promiseAtom: import("jotai").Atom<import("@reactive-dot/core/wallets.js").Wallet<import("@reactive-dot/core/wallets.js").WalletOptions, string>[] | Promise<import("@reactive-dot/core/wallets.js").Wallet<import("@reactive-dot/core/wallets.js").WalletOptions, string>[]>>;
}>;
//# sourceMappingURL=use-wallets.d.ts.map