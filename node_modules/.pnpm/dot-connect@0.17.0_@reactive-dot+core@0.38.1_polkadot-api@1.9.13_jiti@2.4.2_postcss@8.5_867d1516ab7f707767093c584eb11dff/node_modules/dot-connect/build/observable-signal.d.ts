import { Signal } from "@lit-labs/preact-signals";
import type { ReactiveController, ReactiveControllerHost } from "lit";
import type { Observable } from "rxjs";
export declare class ObservableSignal<TValue, TInitialValue extends TValue | void = void> extends Signal<TInitialValue extends void ? TValue | undefined : TValue> implements ReactiveController {
    #private;
    constructor(host: ReactiveControllerHost, observable: Observable<TValue>, initialValue?: TInitialValue);
    hostConnected(): void;
    hostDisconnected(): void;
}
export declare const observableSignal: <TValue, TInitialValue extends TValue | void = void>(host: ReactiveControllerHost, observable: Observable<TValue>, initialValue?: TInitialValue) => ObservableSignal<TValue, TInitialValue>;
//# sourceMappingURL=observable-signal.d.ts.map