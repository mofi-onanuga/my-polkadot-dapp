var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { DotConnectElement } from "./element.js";
import { css, html } from "lit";
import { customElement, property } from "lit/decorators.js";
let CircularProgressIndicator = class CircularProgressIndicator extends DotConnectElement {
    constructor() {
        super(...arguments);
        this.size = "24";
    }
    static { this.styles = [
        super.styles,
        css `
      svg {
        fill: var(--primary-color);
      }
    `,
    ]; }
    render() {
        return html `
      <svg width=${this.size} height=${this.size} viewBox="0 0 24 24">
        <style>
          .spinner_GuJz {
            transform-origin: center;
            animation: spinner_STY6 1.5s linear infinite;
          }
          @keyframes spinner_STY6 {
            100% {
              transform: rotate(360deg);
            }
          }
        </style>
        <g class="spinner_GuJz">
          <circle cx="3" cy="12" r="2" />
          <circle cx="21" cy="12" r="2" />
          <circle cx="12" cy="21" r="2" />
          <circle cx="12" cy="3" r="2" />
          <circle cx="5.64" cy="5.64" r="2" />
          <circle cx="18.36" cy="18.36" r="2" />
          <circle cx="5.64" cy="18.36" r="2" />
          <circle cx="18.36" cy="5.64" r="2" />
        </g>
      </svg>
    `;
    }
};
__decorate([
    property()
], CircularProgressIndicator.prototype, "size", void 0);
CircularProgressIndicator = __decorate([
    customElement("dc-circular-progress-indicator")
], CircularProgressIndicator);
export { CircularProgressIndicator };
//# sourceMappingURL=circular-progress-indicator.js.map