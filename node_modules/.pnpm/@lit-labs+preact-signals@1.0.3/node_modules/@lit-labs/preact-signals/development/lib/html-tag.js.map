{"version":3,"file":"html-tag.js","sourceRoot":"","sources":["../../src/lib/html-tag.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AACH,OAAO,EACL,IAAI,IAAI,QAAQ,EAChB,GAAG,IAAI,OAAO,GAEf,MAAM,aAAa,CAAC;AAErB,OAAO,EAAC,KAAK,EAAC,MAAM,YAAY,CAAC;AACjC,OAAO,EAAC,MAAM,EAAC,MAAM,sBAAsB,CAAC;AAE5C;;;GAGG;AACH,MAAM,CAAC,MAAM,SAAS,GACpB,CAAC,OAAyC,EAAE,EAAE,CAC9C,CAAC,OAA6B,EAAE,GAAG,MAAiB,EAAkB,EAAE;IACtE,8DAA8D;IAC9D,uEAAuE;IACvE,OAAO,OAAO,CACZ,OAAO,EACP,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,YAAY,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAC3D,CAAC;AACJ,CAAC,CAAC;AAEJ;;;;;GAKG;AACH,MAAM,CAAC,MAAM,IAAI,GAAG,SAAS,CAAC,QAAQ,CAAC,CAAC;AAExC;;;;;GAKG;AACH,MAAM,CAAC,MAAM,GAAG,GAAG,SAAS,CAAC,OAAO,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport {\n  html as coreHtml,\n  svg as coreSvg,\n  type TemplateResult,\n} from 'lit/html.js';\n\nimport {watch} from './watch.js';\nimport {Signal} from '@preact/signals-core';\n\n/**\n * Wraps a lit-html template tag function (`html` or `svg`) to add support for\n * automatically wrapping Signal instances in the `watch()` directive.\n */\nexport const withWatch =\n  (coreTag: typeof coreHtml | typeof coreSvg) =>\n  (strings: TemplateStringsArray, ...values: unknown[]): TemplateResult => {\n    // TODO (justinfagnani): use an alternative to instanceof when\n    // one is available. See https://github.com/preactjs/signals/issues/402\n    return coreTag(\n      strings,\n      ...values.map((v) => (v instanceof Signal ? watch(v) : v))\n    );\n  };\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n *\n * Includes signal watching support from `withWatch()`.\n */\nexport const html = withWatch(coreHtml);\n\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n *\n * Includes signal watching support from `withWatch()`.\n */\nexport const svg = withWatch(coreSvg);\n"]}