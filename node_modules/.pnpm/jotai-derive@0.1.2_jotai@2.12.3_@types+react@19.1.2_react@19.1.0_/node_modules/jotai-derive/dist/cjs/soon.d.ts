/**
 * Executes `process` with `data` as input synchronously if `data` is known, meaning
 * it is not an unresolved promise of the value.
 *
 * @param data The data to process, now or later (soon)
 * @param process The processing function
 * @returns The result (or promise of result) from running `process`.
 */
export declare function soon<TInput, TOutput>(data: TInput, process: (knownData: NoInfer<Awaited<TInput>>) => TOutput): TOutput | Promise<Awaited<TOutput>>;
/**
 * Executes `process` with `data` as input synchronously if `data` is known, meaning
 * it is not an unresolved promise of the value.
 *
 * @param process The processing function
 * @returns A function that can be called with `data`, and returns the
 *          result (or promise of result) from running `process` on `data`.
 */
export declare function soon<TInput, TOutput>(process: (knownData: NoInfer<Awaited<TInput>>) => TOutput): (data: TInput) => TOutput | Promise<Awaited<TOutput>>;
